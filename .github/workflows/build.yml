name: Build binaries
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu, windows]

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Prepare build dir
        run: mkdir -p build/${{ matrix.os }}

      - name: Download Godot Headless
        env:
          GODOT_VERSION: 4.3
        run: |
          curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_linux.x86_64.zip
          unzip godot.zip -d godot
          chmod +x godot/Godot_v${GODOT_VERSION}-stable_linux.x86_64
  
      - name: Download Export Templates
        run: |
          curl -L -o export_templates.tpz https://github.com/godotengine/godot/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          mkdir -p ~/.config/godot/
          mv export_templates.tpz ~/.config/godot/
  
      - name: Export Game
        env:
          GODOT_BINARY: godot/Godot_v${GODOT_VERSION}-stable_linux.x86_64
        run: |
          if [ "${{ matrix.os }}" == "linux" ]; then
            mkdir -p build/linux
            $GODOT_BINARY --export-release "Linux/X11" build/linux/RAT_Encoder.x86_64
          elif [ "${{ matrix.os }}" == "windows" ]; then
            mkdir -p build/windows
            $GODOT_BINARY --export-release "Windows Desktop" build/windows/RAT_Encoder.exe
          fi
  
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: |
            build/linux/*.x86_64
            build/windows/*.exe